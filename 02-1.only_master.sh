#!/usr/bin/bash

# control-plaine 컴포넌트 구성
sudo kubeadm init --pod-network-cidr=192.168.0.0/16 --cri-socket unix:///var/run/cri-dockerd.sock >> /home/ubuntu/kubeadm_init.log
# ...
# [addons] Applied essential addon: kube-proxy
# Your Kubernetes control-plane has initialized successfully!

# Kubectl을 명령 실행 허용하려면 kubeadm init 명령의 실행결과 나온 내용을 동작해야 함(인증서를 생성함)
sudo mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config

# 토큰 값 확인
# kubeadm token list
# TOKEN                     TTL         EXPIRES                USAGES                   DESCRIPTION                                                EXTRA GROUPS
# d14be3.lmivnxli58qxnvff   19h         2023-02-22T02:16:35Z   authentication,signing   The default bootstrap token generated by 'kubeadm init'.   system:bootstrappers:kubeadm:default-node-token

# 해시 값 확인
# openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt | openssl rsa -pubin -outform der 2>/dev/null | openssl dgst -sha256 -hex | sed 's/^.* //'
# d02d719f85d34dc70dd009d3ba5dd4c686d6341e4c494eef5df12f332ad8ae98

# Calico 설치
# CNI(컨테이너 네트워크 인터페이스) 기반 Pod 네트워크 추가 기능을 배포해야 Pod가 서로 통신할 수 있습니다. 네트워크를 설치하기 전에 클러스터 DNS(CoreDNS)가 시작되지 않습니다.
# kubectl get nodes
# NAME       STATUS     ROLES           AGE     VERSION
# master     NotReady   control-plane   7m31s   v1.24.8

# Pod 네트워크가 호스트 네트워크와 겹치지 않도록 주의해야함. 
# Calico 설치
kubectl create -f https://raw.githubusercontent.com/projectcalico/calico/v3.24.1/manifests/tigera-operator.yaml
kubectl create -f https://raw.githubusercontent.com/projectcalico/calico/v3.24.1/manifests/custom-resources.yaml
sleep 5

# ubuntu 사용자가 kubectl 명령 실행 가능하도록 설정
sudo mkdir -p ~ubuntu/.kube
sudo cp -i /etc/kubernetes/admin.conf ~ubuntu/.kube/config
sudo chown -R ubuntu:ubuntu ~ubuntu/.kube